// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Note: These models match the existing database schema in init-db.sql
// DO NOT push this schema - it's designed to work with existing tables

model category {
  category_id Int      @id @default(autoincrement())
  name        String   @unique @db.VarChar(100)
  description String?  @db.Text
  color       String?  @db.VarChar(7)
  created_at  DateTime @default(now()) @db.Timestamptz(6)

  // Relations
  todos todo[]
}

model todo {
  todo_id     Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  description String?  @db.Text
  status      String   @db.VarChar(50) // pending, in_progress, completed, cancelled
  priority    String   @db.VarChar(20) // low, medium, high
  category_id Int?
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  updated_at  DateTime @default(now()) @db.Timestamptz(6)

  // Relations
  category category?      @relation(fields: [category_id], references: [category_id], onDelete: SetNull)
  comments todo_comment[]
}

model todo_comment {
  todo_comment_id Int      @id @default(autoincrement())
  todo_id         Int
  content         String   @db.Text
  author_name     String   @db.VarChar(100)
  created_at      DateTime @default(now()) @db.Timestamptz(6)

  // Relations
  todo todo @relation(fields: [todo_id], references: [todo_id], onDelete: Cascade)
}
